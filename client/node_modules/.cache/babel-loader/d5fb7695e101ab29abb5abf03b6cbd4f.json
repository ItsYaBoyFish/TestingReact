{"ast":null,"code":"var _jsxFileName = \"/Users/austin/Documents/VU Coding Boot Camp/Projects/Project 3/raduno/client/src/components/EventNav/EventNav.js\";\nimport React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Navbar, Modal, Button, Form, Card, ListGroup, Row, Col, ButtonGroup, Container, Nav, ButtonToolbar } from 'react-bootstrap';\nimport \"./EventNav.css\";\nimport './styleModal.css';\nimport Axios from \"axios\";\n\nclass EventNav extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      showRsvpForm: false,\n      showEventInfo: false,\n      rsvpName: \"\",\n      rsvpNumberInParty: 0,\n      rsvpTypeofDish: \"\",\n      rsvpNameofDish: \"\",\n      eventInfo: this.props.eventInfo,\n      rsvpInfo: this.props.rsvpInfo\n    };\n\n    this.handleCloseRsvpForm = event => {\n      this.setState({\n        showRsvpForm: false\n      });\n      this.setState({\n        rsvpName: \"\",\n        rsvpNumberInParty: 0,\n        rsvpTypeofDish: \"\",\n        rsvpNameofDish: \"\"\n      });\n    };\n\n    this.handleShowRsvpForm = event => {\n      this.setState({\n        showRsvpForm: true\n      });\n    };\n\n    this.handleCloseEventInfo = event => {\n      this.setState({\n        showEventInfo: false\n      });\n    };\n\n    this.handleShowEventInfo = event => {\n      this.setState({\n        showEventInfo: true\n      });\n    };\n\n    this.handleInputChange = event => {\n      const _event$target = event.target,\n            name = _event$target.name,\n            value = _event$target.value;\n      this.setState({\n        [name]: value\n      }); // console.log(this.state);\n    };\n\n    this.handleRsvpFormSubmit = event => {\n      event.preventDefault();\n      Axios.post(`/event/rsvp/${this.state.rsvpInfo[0].event_id}`, {\n        event_id: this.state.rsvpInfo[0].event_id,\n        rsvpName: this.state.rsvpName,\n        rsvpNumberInParty: this.state.rsvpNumberInParty,\n        rsvpTypeofDish: this.state.rsvpTypeofDish,\n        rsvpNameofDish: this.state.rsvpNameofDish\n      }).then(function (result) {\n        console.log(result.data);\n        window.location.reload();\n      }).catch(function (error) {\n        console.log(error);\n      });\n      this.handleCloseRsvpForm();\n    };\n  }\n\n  render() {\n    return React.createElement(React.Fragment, null, React.createElement(Navbar, {\n      fixed: \"top\",\n      expand: \"lg\",\n      className: \"colorEvent justify-content-between\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"events\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(Navbar.Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"eventsTitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \"Event: \", this.state.eventInfo[0].eventName), React.createElement(\"div\", {\n      className: \"userName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"Hosted By: \", this.state.eventInfo[0].eventHost))), React.createElement(ButtonToolbar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(Button, {\n      className: \"eventButtonInfo\",\n      onClick: this.handleShowEventInfo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \"Event Info\"), React.createElement(Button, {\n      className: \"eventButtonRSVP\",\n      onClick: this.handleShowRsvpForm,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, \"RSVP Here\"))), React.createElement(Modal, {\n      show: this.state.showRsvpForm,\n      onHide: this.handleCloseRsvpForm,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(Modal.Header, {\n      className: \"modalHeader\",\n      closeButton: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(Modal.Title, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, \"Create Your Event\")), React.createElement(Modal.Body, {\n      style: {\n        'max-height': 'calc(100vh - 210px)',\n        'overflowY': 'auto'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(Form, {\n      className: \"modalBody\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, \"Your Name\"), React.createElement(Form.Control, {\n      type: \"text\",\n      name: \"rsvpName\",\n      value: this.state.rsvpName,\n      onChange: this.handleInputChange,\n      placeholder: \"Enter Name Here\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    })), React.createElement(Form.Group, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, \"Number of People in Your Party (total)\"), React.createElement(Form.Control, {\n      type: \"number\",\n      name: \"rsvpNumberInParty\",\n      value: this.state.rsvpNumberInParty,\n      onChange: this.handleInputChange,\n      min: \"1\",\n      placeholder: \"1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    })), React.createElement(Form.Group, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, \"Type of Dish\"), React.createElement(Form.Control, {\n      as: \"select\",\n      name: \"rsvpTypeofDish\",\n      value: this.state.rsvpTypeofDish,\n      onChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"\",\n      disabled: true,\n      selected: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, \"Select your option\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, \"Main\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, \"Side\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, \"Dessert\"))), React.createElement(Form.Group, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, \"Name of Dish\"), React.createElement(Form.Control, {\n      type: \"text\",\n      name: \"rsvpNameofDish\",\n      value: this.state.rsvpNameofDish,\n      onChange: this.handleInputChange,\n      placeholder: \"Enter Name of Dish Here\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    })))), React.createElement(Modal.Footer, {\n      className: \"modalFooter\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"secondary\",\n      onClick: this.handleCloseRsvpForm,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, \"Close\"), React.createElement(Button, {\n      className: \"btn btn-primary submit-btn\",\n      disabled: !(this.state.rsvpName && this.state.rsvpNumberInParty && this.state.rsvpTypeofDish && this.state.rsvpNameofDish),\n      variant: \"primary\",\n      type: \"submit\",\n      onClick: this.handleRsvpFormSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, \"Submit\"))), React.createElement(Modal, {\n      show: this.state.showEventInfo,\n      onHide: this.handleCloseEventInfo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, React.createElement(Modal.Header, {\n      className: \"modalHeader\",\n      closeButton: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, React.createElement(Modal.Title, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, \"Event Information\")), React.createElement(Modal.Body, {\n      style: {\n        'max-height': 'calc(100vh - 210px)',\n        'overflowY': 'auto'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, React.createElement(Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, React.createElement(Card.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, React.createElement(Card.Title, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, this.state.eventInfo.eventName), React.createElement(ListGroup, {\n      variant: \"flush\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, React.createElement(ListGroup.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, \"Date:\"), \" \", this.state.eventInfo.eventDate), React.createElement(ListGroup.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, \"Time:\"), \" \", this.state.eventInfo.eventTime), React.createElement(ListGroup.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, \"Address:\"), \" \", React.createElement(\"a\", {\n      href: `https://www.google.com/maps/place/${this.state.eventInfo.eventLocationStreet + \" \" + this.state.eventInfo.eventLocationCity + \" \" + this.state.eventInfo.eventLocationState + \" \" + this.state.eventInfo.eventLocationZipCode}`,\n      target: \"_blank\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, this.state.eventInfo.eventLocationStreet, \" \", this.state.eventInfo.eventLocationCity, \",\", this.state.eventInfo.eventLocationState, \", \", this.state.eventInfo.eventLocationZipCode)), React.createElement(ListGroup.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, \"Description:\"), \" \", this.state.eventInfo.eventDescription))))), React.createElement(Modal.Footer, {\n      className: \"modalFooter\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"secondary\",\n      onClick: this.handleCloseEventInfo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }, \"Close\"))));\n  }\n\n}\n\n;\nexport default EventNav;","map":{"version":3,"sources":["/Users/austin/Documents/VU Coding Boot Camp/Projects/Project 3/raduno/client/src/components/EventNav/EventNav.js"],"names":["React","Navbar","Modal","Button","Form","Card","ListGroup","Row","Col","ButtonGroup","Container","Nav","ButtonToolbar","Axios","EventNav","Component","state","showRsvpForm","showEventInfo","rsvpName","rsvpNumberInParty","rsvpTypeofDish","rsvpNameofDish","eventInfo","props","rsvpInfo","handleCloseRsvpForm","event","setState","handleShowRsvpForm","handleCloseEventInfo","handleShowEventInfo","handleInputChange","target","name","value","handleRsvpFormSubmit","preventDefault","post","event_id","then","result","console","log","data","window","location","reload","catch","error","render","eventName","eventHost","eventDate","eventTime","eventLocationStreet","eventLocationCity","eventLocationState","eventLocationZipCode","eventDescription"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,sCAAP;AACA,SAAQC,MAAR,EAAeC,KAAf,EAAsBC,MAAtB,EAA8BC,IAA9B,EAAoCC,IAApC,EAA0CC,SAA1C,EAAqDC,GAArD,EAA0DC,GAA1D,EAA+DC,WAA/D,EAA4EC,SAA5E,EAAuFC,GAAvF,EAA4FC,aAA5F,QAAgH,iBAAhH;AACA,OAAO,gBAAP;AACA,OAAO,kBAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAGA,MAAMC,QAAN,SAAuBd,KAAK,CAACe,SAA7B,CAAuC;AAAA;AAAA;AAAA,SAErCC,KAFqC,GAE7B;AACNC,MAAAA,YAAY,EAAE,KADR;AAENC,MAAAA,aAAa,EAAE,KAFT;AAGNC,MAAAA,QAAQ,EAAE,EAHJ;AAINC,MAAAA,iBAAiB,EAAE,CAJb;AAKNC,MAAAA,cAAc,EAAE,EALV;AAMNC,MAAAA,cAAc,EAAE,EANV;AAONC,MAAAA,SAAS,EAAE,KAAKC,KAAL,CAAWD,SAPhB;AAQNE,MAAAA,QAAQ,EAAE,KAAKD,KAAL,CAAWC;AARf,KAF6B;;AAAA,SAarCC,mBAbqC,GAadC,KAAK,IAAI;AAC/B,WAAKC,QAAL,CAAc;AAACX,QAAAA,YAAY,EAAE;AAAf,OAAd;AACA,WAAKW,QAAL,CAAc;AACbT,QAAAA,QAAQ,EAAE,EADG;AAEbC,QAAAA,iBAAiB,EAAE,CAFN;AAGbC,QAAAA,cAAc,EAAE,EAHH;AAIbC,QAAAA,cAAc,EAAE;AAJH,OAAd;AAMA,KArBoC;;AAAA,SAuBrCO,kBAvBqC,GAuBfF,KAAK,IAAI;AAC7B,WAAKC,QAAL,CAAc;AAACX,QAAAA,YAAY,EAAE;AAAf,OAAd;AACA,KAzBmC;;AAAA,SA2BrCa,oBA3BqC,GA2BbH,KAAK,IAAI;AAChC,WAAKC,QAAL,CAAc;AAACV,QAAAA,aAAa,EAAE;AAAhB,OAAd;AACA,KA7BoC;;AAAA,SA+BrCa,mBA/BqC,GA+BdJ,KAAK,IAAI;AAC9B,WAAKC,QAAL,CAAc;AACZV,QAAAA,aAAa,EAAE;AADH,OAAd;AAID,KApCoC;;AAAA,SAsCrCc,iBAtCqC,GAsCjBL,KAAK,IAAI;AAAA,4BACLA,KAAK,CAACM,MADD;AAAA,YACpBC,IADoB,iBACpBA,IADoB;AAAA,YACdC,KADc,iBACdA,KADc;AAE3B,WAAKP,QAAL,CACI;AAAC,SAACM,IAAD,GAAOC;AAAR,OADJ,EAF2B,CAKzB;AACH,KA5CoC;;AAAA,SA8CrCC,oBA9CqC,GA8CdT,KAAK,IAAG;AAC7BA,MAAAA,KAAK,CAACU,cAAN;AAEAxB,MAAAA,KAAK,CAACyB,IAAN,CAAY,eAAc,KAAKtB,KAAL,CAAWS,QAAX,CAAoB,CAApB,EAAuBc,QAAS,EAA1D,EAA6D;AAC3DA,QAAAA,QAAQ,EAAE,KAAKvB,KAAL,CAAWS,QAAX,CAAoB,CAApB,EAAuBc,QAD0B;AAE3DpB,QAAAA,QAAQ,EAAE,KAAKH,KAAL,CAAWG,QAFsC;AAG3DC,QAAAA,iBAAiB,EAAE,KAAKJ,KAAL,CAAWI,iBAH6B;AAI3DC,QAAAA,cAAc,EAAE,KAAKL,KAAL,CAAWK,cAJgC;AAK3DC,QAAAA,cAAc,EAAE,KAAKN,KAAL,CAAWM;AALgC,OAA7D,EAOCkB,IAPD,CAOM,UAASC,MAAT,EAAiB;AACrBC,QAAAA,OAAO,CAACC,GAAR,CAAYF,MAAM,CAACG,IAAnB;AACAC,QAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AACD,OAVD,EAWCC,KAXD,CAWO,UAASC,KAAT,EAAgB;AACrBP,QAAAA,OAAO,CAACC,GAAR,CAAYM,KAAZ;AACD,OAbD;AAcA,WAAKvB,mBAAL;AACD,KAhEoC;AAAA;;AAkErCwB,EAAAA,MAAM,GAAG;AACP,WACA,0CACA,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,KAAd;AAAoB,MAAA,MAAM,EAAC,IAA3B;AAAgC,MAAA,SAAS,EAAC,oCAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD,CAAQ,IAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACU,KAAKlC,KAAL,CAAWO,SAAX,CAAqB,CAArB,EAAwB4B,SADlC,CADF,EAKE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACc,KAAKnC,KAAL,CAAWO,SAAX,CAAqB,CAArB,EAAwB6B,SADtC,CALF,CADF,CAFJ,EAqBM,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAS,MAAA,SAAS,EAAC,iBAAnB;AAAqC,MAAA,OAAO,EAAE,KAAKrB,mBAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAKE,oBAAC,MAAD;AAAQ,MAAA,SAAS,EAAC,iBAAlB;AAAoC,MAAA,OAAO,EAAE,KAAKF,kBAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBALF,CArBN,CADA,EAsCA,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAE,KAAKb,KAAL,CAAWC,YAAxB;AAAsC,MAAA,MAAM,EAAE,KAAKS,mBAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,KAAD,CAAO,MAAP;AAAc,MAAA,SAAS,EAAC,aAAxB;AAAsC,MAAA,WAAW,MAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD,CAAO,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADF,CADA,EAKA,oBAAC,KAAD,CAAO,IAAP;AAAY,MAAA,KAAK,EAAE;AAAC,sBAAc,qBAAf;AAAsC,qBAAa;AAAnD,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD;AAAM,MAAA,SAAS,EAAC,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEA,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,EAEE,oBAAC,IAAD,CAAM,OAAN;AAAc,MAAA,IAAI,EAAC,MAAnB;AAA0B,MAAA,IAAI,EAAC,UAA/B;AAA0C,MAAA,KAAK,EAAE,KAAKV,KAAL,CAAWG,QAA5D;AAAsE,MAAA,QAAQ,EAAE,KAAKa,iBAArF;AAAyG,MAAA,WAAW,EAAC,iBAArH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CAFA,EAOA,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gDADF,EAEE,oBAAC,IAAD,CAAM,OAAN;AAAc,MAAA,IAAI,EAAC,QAAnB;AAA4B,MAAA,IAAI,EAAC,mBAAjC;AAAqD,MAAA,KAAK,EAAE,KAAKhB,KAAL,CAAWI,iBAAvE;AAA0F,MAAA,QAAQ,EAAE,KAAKY,iBAAzG;AAA4H,MAAA,GAAG,EAAC,GAAhI;AAAoI,MAAA,WAAW,EAAC,GAAhJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CAPA,EAYA,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,EAEE,oBAAC,IAAD,CAAM,OAAN;AAAc,MAAA,EAAE,EAAC,QAAjB;AAA0B,MAAA,IAAI,EAAC,gBAA/B;AAAgD,MAAA,KAAK,EAAE,KAAKhB,KAAL,CAAWK,cAAlE;AAAkF,MAAA,QAAQ,EAAE,KAAKW,iBAAjG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAQ,MAAA,KAAK,EAAC,EAAd;AAAiB,MAAA,QAAQ,MAAzB;AAA0B,MAAA,QAAQ,MAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAJF,CAFF,CAZA,EAsBA,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,EAEE,oBAAC,IAAD,CAAM,OAAN;AAAc,MAAA,IAAI,EAAC,MAAnB;AAA0B,MAAA,IAAI,EAAC,gBAA/B;AAAgD,MAAA,KAAK,EAAE,KAAKhB,KAAL,CAAWM,cAAlE;AAAkF,MAAA,QAAQ,EAAE,KAAKU,iBAAjG;AAAoH,MAAA,WAAW,EAAC,yBAAhI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CAtBA,CADJ,CALA,EAoCA,oBAAC,KAAD,CAAO,MAAP;AAAc,MAAA,SAAS,EAAC,aAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,WAAhB;AAA4B,MAAA,OAAO,EAAE,KAAKN,mBAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAGE,oBAAC,MAAD;AAAQ,MAAA,SAAS,EAAC,4BAAlB;AACC,MAAA,QAAQ,EAAI,EAAE,KAAKV,KAAL,CAAWG,QAAX,IACb,KAAKH,KAAL,CAAWI,iBADE,IACmB,KAAKJ,KAAL,CAAWK,cAD9B,IACgD,KAAKL,KAAL,CAAWM,cAD7D,CADb;AAGA,MAAA,OAAO,EAAC,SAHR;AAGkB,MAAA,IAAI,EAAC,QAHvB;AAGgC,MAAA,OAAO,EAAE,KAAKc,oBAH9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF,CApCA,CAtCA,EAqFA,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAE,KAAKpB,KAAL,CAAWE,aAAxB;AAAuC,MAAA,MAAM,EAAE,KAAKY,oBAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,KAAD,CAAO,MAAP;AAAc,MAAA,SAAS,EAAC,aAAxB;AAAsC,MAAA,WAAW,MAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD,CAAO,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADF,CADA,EAKA,oBAAC,KAAD,CAAO,IAAP;AAAY,MAAA,KAAK,EAAE;AAAC,sBAAc,qBAAf;AAAsC,qBAAa;AAAnD,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAa,KAAKd,KAAL,CAAWO,SAAX,CAAqB4B,SAAlC,CADF,EAEI,oBAAC,SAAD;AAAW,MAAA,OAAO,EAAC,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD,CAAW,IAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,OACgB,KAAKnC,KAAL,CAAWO,SAAX,CAAqB8B,SADrC,CADF,EAIE,oBAAC,SAAD,CAAW,IAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,OACgB,KAAKrC,KAAL,CAAWO,SAAX,CAAqB+B,SADrC,CAJF,EAOE,oBAAC,SAAD,CAAW,IAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,OACkB;AAAG,MAAA,IAAI,EAAG,qCAAoC,KAAKtC,KAAL,CAAWO,SAAX,CAAqBgC,mBAArB,GAA2C,GAA3C,GAAiD,KAAKvC,KAAL,CAAWO,SAAX,CAAqBiC,iBAAtE,GAA0F,GAA1F,GAAgG,KAAKxC,KAAL,CAAWO,SAAX,CAAqBkC,kBAArH,GAA0I,GAA1I,GAAgJ,KAAKzC,KAAL,CAAWO,SAAX,CAAqBmC,oBAAqB,EAAxO;AAA2O,MAAA,MAAM,EAAC,QAAlP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA4P,KAAK1C,KAAL,CAAWO,SAAX,CAAqBgC,mBAAjR,OAAuS,KAAKvC,KAAL,CAAWO,SAAX,CAAqBiC,iBAA5T,OAAgV,KAAKxC,KAAL,CAAWO,SAAX,CAAqBkC,kBAArW,QAA2X,KAAKzC,KAAL,CAAWO,SAAX,CAAqBmC,oBAAhZ,CADlB,CAPF,EAUE,oBAAC,SAAD,CAAW,IAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,OACuB,KAAK1C,KAAL,CAAWO,SAAX,CAAqBoC,gBAD5C,CAVF,CAFJ,CADF,CADF,CALA,EA4BA,oBAAC,KAAD,CAAO,MAAP;AAAc,MAAA,SAAS,EAAC,aAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,WAAhB;AAA4B,MAAA,OAAO,EAAE,KAAK7B,oBAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,CA5BA,CArFA,CADA;AAwHD;;AA3LoC;;AA4LtC;AAED,eAAehB,QAAf","sourcesContent":["import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {Navbar,Modal, Button, Form, Card, ListGroup, Row, Col, ButtonGroup, Container, Nav, ButtonToolbar} from 'react-bootstrap';\nimport \"./EventNav.css\";\nimport './styleModal.css';\nimport Axios from \"axios\";\n\n\nclass EventNav extends React.Component {\n\n  state = {\n    showRsvpForm: false,\n    showEventInfo: false,\n    rsvpName: \"\",\n    rsvpNumberInParty: 0,\n    rsvpTypeofDish: \"\",\n    rsvpNameofDish: \"\",\n    eventInfo: this.props.eventInfo,\n    rsvpInfo: this.props.rsvpInfo\n  };\n\n  handleCloseRsvpForm  = event => {\n   this.setState({showRsvpForm: false});\n   this.setState({\n    rsvpName: \"\",\n    rsvpNumberInParty: 0,\n    rsvpTypeofDish: \"\",\n    rsvpNameofDish: \"\"   \n    });\n  };\n\n  handleShowRsvpForm  = event => {\n    this.setState({showRsvpForm: true});\n   };\n\n  handleCloseEventInfo  = event => {\n   this.setState({showEventInfo: false});\n  };\n\n  handleShowEventInfo  = event => {\n    this.setState({\n      showEventInfo: true,\n\n    });\n  };\n\n  handleInputChange = event => {\n    const {name, value} = event.target;\n    this.setState(\n        {[name]:value}\n      );\n      // console.log(this.state);\n  } \n  \n  handleRsvpFormSubmit = event =>{\n    event.preventDefault();\n\n    Axios.post(`/event/rsvp/${this.state.rsvpInfo[0].event_id}`, {\n      event_id: this.state.rsvpInfo[0].event_id,\n      rsvpName: this.state.rsvpName,\n      rsvpNumberInParty: this.state.rsvpNumberInParty,\n      rsvpTypeofDish: this.state.rsvpTypeofDish,\n      rsvpNameofDish: this.state.rsvpNameofDish\n    })\n    .then(function(result) {\n      console.log(result.data);\n      window.location.reload();\n    })\n    .catch(function(error) {\n      console.log(error);\n    });\n    this.handleCloseRsvpForm();\n  }\n\n  render() {\n    return (\n    <>\n    <Navbar fixed=\"top\" expand=\"lg\" className=\"colorEvent justify-content-between\">\n      {/* <div class=\"containerBtn\"> */}\n        <div className=\"events\">\n          <Navbar.Text>\n            <div className=\"eventsTitle\"> \n              Event: {this.state.eventInfo[0].eventName}\n            </div> \n\n            <div className=\"userName\">\n              Hosted By: {this.state.eventInfo[0].eventHost}\n            </div>      \n          </Navbar.Text>\n        </div>    \n        {/* <div className=\"containerCount\">        \n          <div className=\"invitedNum\">\n            Invited:\n          </div>\n            <div className=\"rsvpCount\">\n              RSVP:\n            </div>\n           </div>      */}\n          <ButtonToolbar>\n            <Button  className=\"eventButtonInfo\" onClick={this.handleShowEventInfo}>Event Info</Button>\n            \n\n            \n            <Button className=\"eventButtonRSVP\" onClick={this.handleShowRsvpForm}>RSVP Here</Button>\n           \n            \n            </ButtonToolbar>\n\n\n          {/* </div> */}\n         \n          \n      </Navbar>\n\n    <Modal show={this.state.showRsvpForm} onHide={this.handleCloseRsvpForm}>\n    <Modal.Header className=\"modalHeader\" closeButton>\n      <Modal.Title>Create Your Event</Modal.Title>\n    </Modal.Header>\n\n    <Modal.Body style={{'max-height': 'calc(100vh - 210px)', 'overflowY': 'auto'}}>\n        <Form className=\"modalBody\">\n\n        <Form.Group>\n          <Form.Label>Your Name</Form.Label>\n          <Form.Control type=\"text\" name=\"rsvpName\" value={this.state.rsvpName} onChange={this.handleInputChange}  placeholder=\"Enter Name Here\" />\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Label>Number of People in Your Party (total)</Form.Label>\n          <Form.Control type=\"number\" name=\"rsvpNumberInParty\" value={this.state.rsvpNumberInParty} onChange={this.handleInputChange} min=\"1\" placeholder=\"1\" />\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Label>Type of Dish</Form.Label>\n          <Form.Control as=\"select\" name=\"rsvpTypeofDish\" value={this.state.rsvpTypeofDish} onChange={this.handleInputChange}>\n            <option value=\"\" disabled selected>Select your option</option>\n            <option>Main</option>\n            <option>Side</option>\n            <option>Dessert</option>\n          </Form.Control>\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Label>Name of Dish</Form.Label>\n          <Form.Control type=\"text\" name=\"rsvpNameofDish\" value={this.state.rsvpNameofDish} onChange={this.handleInputChange} placeholder=\"Enter Name of Dish Here\" />\n        </Form.Group>\n\n      </Form>\n    </Modal.Body>\n\n    <Modal.Footer className=\"modalFooter\">\n      <Button variant=\"secondary\" onClick={this.handleCloseRsvpForm} >Close</Button>\n\n      <Button className=\"btn btn-primary submit-btn\"\n       disabled = {!(this.state.rsvpName && \n        this.state.rsvpNumberInParty && this.state.rsvpTypeofDish && this.state.rsvpNameofDish)}\n      variant=\"primary\" type=\"submit\" onClick={this.handleRsvpFormSubmit}>Submit</Button>\n\n    </Modal.Footer>\n    </Modal>\n\n    <Modal show={this.state.showEventInfo} onHide={this.handleCloseEventInfo}>\n    <Modal.Header className=\"modalHeader\" closeButton>\n      <Modal.Title>Event Information</Modal.Title>\n    </Modal.Header>\n  \n    <Modal.Body style={{'max-height': 'calc(100vh - 210px)', 'overflowY': 'auto'}}>\n      <Card>\n        <Card.Body>\n          <Card.Title>{this.state.eventInfo.eventName}</Card.Title>\n            <ListGroup variant=\"flush\">\n              <ListGroup.Item>\n                <b>Date:</b> {this.state.eventInfo.eventDate}\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <b>Time:</b> {this.state.eventInfo.eventTime}\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <b>Address:</b> <a href={`https://www.google.com/maps/place/${this.state.eventInfo.eventLocationStreet + \" \" + this.state.eventInfo.eventLocationCity + \" \" + this.state.eventInfo.eventLocationState + \" \" + this.state.eventInfo.eventLocationZipCode}`} target=\"_blank\">{this.state.eventInfo.eventLocationStreet} {this.state.eventInfo.eventLocationCity},{this.state.eventInfo.eventLocationState}, {this.state.eventInfo.eventLocationZipCode}</a>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <b>Description:</b> {this.state.eventInfo.eventDescription}\n              </ListGroup.Item>\n            </ListGroup>\n        </Card.Body>\n      </Card>\n          \n    </Modal.Body>\n  \n    <Modal.Footer className=\"modalFooter\">\n      <Button variant=\"secondary\" onClick={this.handleCloseEventInfo} >Close</Button>\n    </Modal.Footer>\n    </Modal>\n    </>\n    )\n  }\n};\n\nexport default EventNav;"]},"metadata":{},"sourceType":"module"}