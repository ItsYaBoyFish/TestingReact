{"ast":null,"code":"var _jsxFileName = \"/Users/austin/Documents/VU Coding Boot Camp/Projects/Project 3/raduno/client/src/components/EventCards/EventCard.js\";\nimport { Card, Row, Col } from 'react-bootstrap';\nimport React from 'react';\nimport './EventCard.css';\nimport axios from 'axios';\n\nclass EventCard extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      upcomingEvents: [],\n      passedEvents: []\n    };\n  }\n\n  componentDidMount() {\n    var userInfo = JSON.parse(sessionStorage.getItem('userInfo'));\n\n    if (userInfo !== null) {\n      axios.get(`/myEvents/${userInfo.id}`).then(results => {\n        // console.log(results.data.upcomingEvents);\n        this.setState({\n          upcomingEvents: results.data.UpcomingEvents,\n          passedEvents: results.data.PassedEvents\n        });\n      });\n    } else {\n      console.log({\n        Message: 'No User Info Found'\n      });\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(Col, {\n      xs: 12,\n      md: 6,\n      lg: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(Card, {\n      className: \"upcomingEventCard text-center\",\n      style: {\n        'max-height': 'calc(100vh - 210px)',\n        'overflow-y': 'auto',\n        'overflow-x': 'none'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(Card.Title, {\n      className: \"text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, \"Upcoming Events\"), React.createElement(Card, {\n      className: \"card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, this.state.upcomingEvents.map((event, index) => {\n      return React.createElement(Card, {\n        key: index,\n        className: \"cardBody\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, \"Event Name: \", event.eventName, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }), \"Days Away: \", event.DaysAway);\n    })))), React.createElement(Col, {\n      xs: 12,\n      md: 6,\n      lg: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(Card, {\n      className: \"pastEventCard text-center\",\n      style: {\n        'max-height': 'calc(100vh - 210px)',\n        'overflow-y': 'auto',\n        'overflow-x': 'none'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(Card.Title, {\n      className: \"text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \"Past Events\"), React.createElement(Card, {\n      className: \"card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, this.state.passedEvents.map((event, index) => {\n      return React.createElement(Card, {\n        key: index,\n        className: \"cardBody\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, \"Event Name: \", event.eventName, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }), \"Days Away: \", event.DaysAway);\n    }))))));\n  }\n\n}\n\nexport default EventCard;","map":{"version":3,"sources":["/Users/austin/Documents/VU Coding Boot Camp/Projects/Project 3/raduno/client/src/components/EventCards/EventCard.js"],"names":["Card","Row","Col","React","axios","EventCard","Component","state","upcomingEvents","passedEvents","componentDidMount","userInfo","JSON","parse","sessionStorage","getItem","get","id","then","results","setState","data","UpcomingEvents","PassedEvents","console","log","Message","render","map","event","index","eventName","DaysAway"],"mappings":"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","sourcesContent":["import { Card, Row, Col } from 'react-bootstrap';\nimport React from 'react';\nimport './EventCard.css';\nimport axios from 'axios';\nclass EventCard extends React.Component{\n    state = {\n        upcomingEvents: [],\n        passedEvents: []\n    };\n    componentDidMount() {\n        var userInfo = JSON.parse(sessionStorage.getItem('userInfo'));\n        if (userInfo !== null) {\n            axios.get(`/myEvents/${userInfo.id}`).then(results => {\n                // console.log(results.data.upcomingEvents);\n                this.setState({\n                    upcomingEvents: results.data.UpcomingEvents,\n                    passedEvents: results.data.PassedEvents\n                })\n             });\n        } else {\n                console.log({Message: 'No User Info Found'});\n        }\n    }\n\n    render() {\n    return(\n<div className=\"container\">\n    \n    <Row>\n\n<Col xs={12} md={6} lg={6}> \n    <Card className=\"upcomingEventCard text-center\" style={{'max-height': 'calc(100vh - 210px)', 'overflow-y': 'auto', 'overflow-x': 'none'}}>\n    \n    <Card.Title className=\"text-center\">Upcoming Events</Card.Title>\n  \n        <Card className=\"card\" >\n    \n        {this.state.upcomingEvents.map((event, index) => {\n            return <Card key={index} className=\"cardBody\">\n                Event Name: {event.eventName}\n                <br></br>\n                Days Away: {event.DaysAway}\n            </Card>\n        })}\n\n        </Card>\n    </Card>\n</Col>\n\n<Col xs={12} md={6} lg={6}>\n    <Card className=\"pastEventCard text-center\" style={{'max-height': 'calc(100vh - 210px)', 'overflow-y': 'auto', 'overflow-x': 'none'}}>\n        <Card.Title className=\"text-center\">Past Events</Card.Title>\n  \n        <Card className=\"card\">\n            \n            {this.state.passedEvents.map((event, index) => {\n             return <Card key={index} className=\"cardBody\">\n                Event Name: {event.eventName}\n                <br></br>\n                Days Away: {event.DaysAway}  \n              </Card>\n            })}\n        </Card>     \n    </Card>\n</Col>\n        </Row>\n</div>\n        )\n    }   \n}\n\n\nexport default EventCard;"]},"metadata":{},"sourceType":"module"}